---
- name: Install Docker
  hosts: wg
  become: true
  gather_facts: false
  vars:
    wireguard_dir: "/opt/wireguard"
    wireguard_password: "{{ lookup('ansible.builtin.env', 'WIREGUARD_PASSWORD') }}"
    wireguard_hostname: "{{ lookup('ansible.builtin.env', 'WG_EASY_HOSTNAME') }}"
    pihole_password: "{{ lookup('ansible.builtin.env', 'PIHOLE_PASSWORD') }}"
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Wait for servers
      ansible.builtin.wait_for_connection:
    - name: Check for required variables
      ansible.builtin.assert:
        that:
          - wireguard_password | length > 0
          - wireguard_hostname | length > 0
    - name: Add Docker signing key
      ansible.builtin.rpm_key:
        state: present
        key: https://download.docker.com/linux/centos/gpg
    - name: Add Docker Repository
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repository
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable/
    - name: Update list of packages and install docker-ce
      ansible.builtin.dnf:
        pkg:
          - python3
          - python3-pip
          - docker-ce
          - docker-ce-cli
          - containerd
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true
    - name: Install Docker Module for Python
      ansible.builtin.pip:
        name: docker
    - name: Install Docker Compose
      ansible.builtin.pip:
        name: docker-compose
    - name: Enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true
    - name: add ip_tables kernel module
      community.general.modprobe:
        name: ip_tables
        state: absent
        persistent: absent
    - name: Add user to docker group
      register: user
      ansible.builtin.user:
        user: "{{ ansible_user }}"
        append: true
        groups:
          - "docker"
    - name: Create docker compose project directory
      ansible.builtin.file:
        name: /opt/wireguard
        owner: "{{ user.name }}"
        state: directory
        mode: "0755"
    - name: Copy docker-compose config
      register: "composefile"
      ansible.builtin.copy:
        src: "../bootstrap/wireguard/compose.yaml"
        dest: "{{ wireguard_dir }}/docker-compose.yaml"
        owner: "{{ user.name }}"
    - name: Write Wireguard env file
      ansible.builtin.template:
        src: "../templates/wg.env.j2"
        dest: "{{ wireguard_dir }}/wg.env"
        owner: "{{ user.name }}"
    - name: Write Pi-hole env file
      ansible.builtin.template:
        src: "../templates/pihole.env.j2"
        dest: "{{ wireguard_dir }}/pihole.env"
        owner: "{{ user.name }}"
    - name: Create pihole directory
      ansible.builtin.file:
        name: "{{ wireguard_dir }}/.pihole/etc-dnsmasq.d"
        owner: "{{ user.name }}"
        state: directory
        mode: "0755"
    - name: Write Pi-hole k8s-gateway file
      ansible.builtin.template:
        src: "../templates/99-k8s-gateway-forward.conf.j2"
        dest: "{{ wireguard_dir }}/.pihole/etc-dnsmasq.d/99-k8s-gateway-forward.conf"
        owner: "{{ user.name }}"
    - name: Start up Wireguard and Pihole
      community.docker.docker_compose:
        project_src: "{{ wireguard_dir }}"
        state: "present"
