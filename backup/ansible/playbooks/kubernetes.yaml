---
- name: Cluster Installation
  hosts: kubernetes
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Update list of packages and install necessary ones
      ansible.builtin.dnf:
        pkg:
          - python3
          - python3-pip
          - iscsi-initiator-utils
        state: present
        update_cache: true
    - name: Enable iSCSI daemon
      ansible.builtin.systemd:
        name: iscsid
        state: started
        enabled: true
        daemon_reload: true
    - name: Install required Python modules
      ansible.builtin.pip:
        name:
        - PyYAML
        - kubernetes
        state: present
    - name: add ip_vs kernel module
      ansible.builtin.modprobe:
        name: "{{ item }}"
        state: present
        persistent: present
      loop:
        - ip_vs
        - iscsi_tcp
    - name: Check if cluster is installed
      check_mode: false
      ansible.builtin.stat:
        path: /etc/rancher/k3s/config.yaml
      register: k3s_installed
    - name: Ignore manifests templates and urls if the cluster is already installed
      when: k3s_installed.stat.exists
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed
    - name: Wait for custom manifests to rollout
      when:
        - k3s_primary_control_node
        - (k3s_server_manifests_templates | length > 0
            or k3s_server_manifests_urls | length > 0)
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: "{% raw %}{{ item.kind }}{% endraw %}"
        name: "{% raw %}{{ item.name }}{% endraw %}"
        namespace: "{% raw %}{{ item.namespace | default('') }}{% endraw %}"
        wait: true
        wait_sleep: 10
        wait_timeout: 360
      loop:
        - { name: cilium, kind: HelmChart, namespace: kube-system }
        - { name: coredns, kind: HelmChart, namespace: kube-system }
        - { name: policy, kind: CiliumL2AnnouncementPolicy }
        - { name: pool, kind: CiliumLoadBalancerIPPool }
        - { name: podmonitors.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: prometheusrules.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: scrapeconfigs.monitoring.coreos.com, kind: CustomResourceDefinition }
        - { name: servicemonitors.monitoring.coreos.com, kind: CustomResourceDefinition }
    - name: Kubeconfig
      when: k3s_primary_control_node
      ansible.builtin.include_tasks:
        file: ./tasks/kubeconfig.yaml

    - name: Coredns
      when: k3s_primary_control_node
      ansible.builtin.include_tasks:
        file: ./tasks/coredns.yaml

    - name: Cilium
      when: k3s_primary_control_node
      ansible.builtin.include_tasks:
        file: ./tasks/cilium.yaml

    - name: Cruft
      when: k3s_primary_control_node
      ansible.builtin.include_tasks:
        file: ./tasks/cruft.yaml

    - name: Stale Containers
      ansible.builtin.include_tasks: 
        file: ./tasks/stale_containers.yaml
      vars:
        stale_containers_state: enabled
