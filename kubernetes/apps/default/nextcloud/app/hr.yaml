---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 6.5.0
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 30.0.4-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-body-size: 512M
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          location ^~ /.well-known {
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav { return 301 /remote.php/dav/; }
            location = /.well-known/acme-challenge { try_files $uri $uri/ =404; }
            location = /.well-known/pki-validation { try_files $uri $uri/ =404; }
            return 301 /index.php$request_uri;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }
      tls:
        - hosts:
            - &host nextcloud.${SECRET_DOMAIN}
    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
      datadir: /var/www/data
      objectStore:
        s3:
          enabled: true
          existingSecret: *secret
          secretKeys:
            accessKey: "S3_ACCESS_KEY"
            secretKey: "S3_SECRET_KEY"
          host: ${SECRET_DOMAIN}
          usePathStyle: true
          port: "9000"
          bucket: *app
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_DOMAIN}
        smtp:
          port: "587"
      extraEnv: &env
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
      extraInitContainers:
        - name: wait-database
          image: alpine:3.21.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: *secret
                  key: DATABASE_HOST

        - name: wait-redis
          image: alpine:3.21.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env: *env
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.27-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: DATABASE_USER
        passwordKey: DATABASE_PASSWORD
        databaseKey: DATABASE_DB
        hostKey: DATABASE_HOST
    persistence:
      enabled: true
      existingClaim: nextcloud
    cronjob:
      enabled: true
    resources:
      requests:
        cpu: 34m
        memory: 204Mi
      limits:
        memory: 363Mi
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
