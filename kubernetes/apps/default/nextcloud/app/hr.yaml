---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 6.5.0
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 30.0.4
      pullPolicy: IfNotPresent
    ingress:
      enabled: true
      className: external
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Storage
        gethomepage.dev/icon: nextcloud.png
        gethomepage.dev/name: Nextcloud
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/custom-http-errors: "502,503"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
         - hosts:
             - &host cloud.${SECRET_DOMAIN}
    phpClientHttpsFix:
      enabled: true
      protocol: https
    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
        usernameKey: ADMIN_USERNAME
        passwordKey: ADMIN_PASSWORD
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST
      update: 0
      datadir: &datadir /var/www/html/data
      trustedDomains: [*host]
      ## SMTP configuration
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: *host
        smtp:
          secure: ''
          port: 567
      objectStore:
        s3:
          enabled: true
          host: "${NAS_ADDRESS}"
          port: "9000"
          region: "eu-west-1"
          bucket: "nextcloud-data"
          usePathStyle: true
          existingSecret: *secret
          secretKeys:
            accessKey: S3_ACCESS_KEY
            secretKey: S3_SECRET_KEY
      configs: {}
      # For example, to enable image and text file previews:
      #  previews.config.php: |-
      #    <?php
      #    $CONFIG = array (
      #      'enable_previews' => true,
      #      'enabledPreviewProviders' => array (
      #        'OC\Preview\Movie',
      #        'OC\Preview\PNG',
      #        'OC\Preview\JPEG',
      #        'OC\Preview\GIF',
      #        'OC\Preview\BMP',
      #        'OC\Preview\XBitmap',
      #        'OC\Preview\MP3',
      #        'OC\Preview\MP4',
      #        'OC\Preview\TXT',
      #        'OC\Preview\MarkDown',
      #        'OC\Preview\PDF'
      #      ),
      #    );
      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DATABASE
          value: "1"
      # Extra init containers that runs before pods start.
      extraInitContainers: []
      #  - name: do-something
      #    image: busybox
      #    command: ['do', 'something']
      # Extra sidecar containers.
      extraSidecarContainers: []
      #  - name: nextcloud-logger
      #    image: busybox
      #    command: [/bin/sh, -c, 'while ! test -f "/run/nextcloud/data/nextcloud.log"; do sleep 1; done; tail -n+1 -f /run/nextcloud/data/nextcloud.log']
      #    volumeMounts:
      #    - name: nextcloud-data
      #      mountPath: /run/nextcloud/data
      # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
      # to NextCloud pods in Kubernetes. This can then be configured in External Storage
      extraVolumes:
        - name: nextcloud-s3-ca
          secret:
            secretName: *secret
            items:
              - key: ca.crt
                path: custom-ca.crt
      extraVolumeMounts:
        - name: nextcloud-s3-ca
          readOnly: true
          mountPath: "/usr/local/share/ca-certificates/homelab"

      # Set securityContext parameters for the nextcloud CONTAINER only (will not affect nginx container).
      # For example, you may need to define runAsNonRoot directive
      securityContext: {}
        # runAsUser: 33
        # runAsGroup: 33
        # runAsNonRoot: true
        # readOnlyRootFilesystem: false

    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: false

      image:
        repository: nginx
        tag: alpine
        pullPolicy: IfNotPresent

      containerPort: 80
      # This configures nginx to listen on either IPv4, IPv6 or both
      ipFamilies:
        - IPv4
        # - IPv6
      config:
        # This generates the default nginx config as per the nextcloud documentation
        default: true
        headers:
          # -- HSTS settings
          # WARNING: Only add the preload option once you read about
          # the consequences in https://hstspreload.org/. This option
          # will add the domain to a hardcoded list that is shipped
          # in all major browsers and getting removed from this list
          # could take several months.
          # Example:
          # "Strict-Transport-Security": "max-age=15768000; includeSubDomains; preload;"
          "Strict-Transport-Security": ""
          "Referrer-Policy": "no-referrer"
          "X-Content-Type-Options": "nosniff"
          "X-Download-Options": "noopen"
          "X-Frame-Options": "SAMEORIGIN"
          "X-Permitted-Cross-Domain-Policies": "none"
          "X-Robots-Tag": "noindex, nofollow"
          "X-XSS-Protection": "1; mode=block"

        custom:
        # custom: |-
        #     worker_processes  1;..

      resources: {}

      # Set nginx container securityContext parameters. For example, you may need to define runAsNonRoot directive
      securityContext: {}
      # the nginx alpine container default user is 82
        # runAsUser: 82
        # runAsGroup: 33
        # runAsNonRoot: true

      ## Extra environment variables
      extraEnv: []
      #  - name: SOME_ENV
      #    value: ENV_VALUE
    internalDatabase:
      enabled: false
    ##
    ## External database configuration
    ##
    externalDatabase:
      enabled: true

      ## Supported database engines: mysql or postgresql
      type: postgresql
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *secret
        hostKey: DATABASE_HOST
        databaseKey: DATABASE_DB
        usernameKey: DATABASE_USER
        passwordKey: DATABASE_PASSWORD

    ##
    ## Collabora chart configuration
    ## for more options see https://github.com/CollaboraOnline/online/tree/master/kubernetes/helm/collabora-online
    ##
    collabora:
      enabled: false

      autoscaling:
        # enable autocaling, please check collabora README.md first
        enabled: false

      collabora:
        ## HTTPS nextcloud domain, if needed
        aliasgroups: []
        #   - host: "https://nextcloud.domain:443"

        # set extra parameters for collabora
        # you may need to add --o:ssl.termination=true
        extra_params: --o:ssl.enable=false

        ## Specify server_name when the hostname is not reachable directly for
        # example behind reverse-proxy. example: collabora.domain
        server_name: null

        existingSecret:
          # set to true to to get collabora admin credentials from an existin secret
          # if set, ignores collabora.collabora.username and password
          enabled: false
          # name of existing Kubernetes Secret with collboara admin credentials
          secretName: ""
          usernameKey: "username"
          passwordKey: "password"

        # setup admin login credentials, these are ignored if
        # collabora.collabora.existingSecret.enabled=true
        password: examplepass
        username: admin

      # setup ingress
      ingress:
        # enable ingress for collabora online
        enabled: false
        className: ""
        # please check collabora values.yaml for nginx/haproxy annotations examples
        annotations: {}
        hosts:
          - host: chart-example.local
            paths:
            - path: /
              pathType: ImplementationSpecific
        tls: []
        #  - secretName: collabora-ingress-tls
        #    hosts:
        #      - collabora.domain

      # see collabora helm README.md for recommended values
      resources: {}


    ## Cronjob to execute Nextcloud background tasks
    ## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron
    ##
    cronjob:
      enabled: true
      # Set securityContext parameters. For example, you may need to define runAsNonRoot directive
      securityContext: {}
        # runAsUser: 33
        # runAsGroup: 33
        # runAsNonRoot: true
        # readOnlyRootFilesystem: true
    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    ## Liveness and readiness probe values
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
    imaginary:
      # -- Start Imgaginary
      enabled: false
      # -- Optional security context for the Imaginary container
      securityContext:
        # runAsUser: 1000
        # runAsNonRoot: true
        # allowPrivilegeEscalation: false
        # capabilities:
        #   drop:
        #     - ALL
      readinessProbe:
        enabled: true
        failureThreshold: 3
        successThreshold: 1
        periodSeconds: 10
        timeoutSeconds: 1
      livenessProbe:
        enabled: true
        failureThreshold: 3
        successThreshold: 1
        periodSeconds: 10
        timeoutSeconds: 1

      service:
        # -- Imaginary: Kubernetes Service type
        type: ClusterIP
        # -- Imaginary: LoadBalancerIp for service type LoadBalancer
        loadBalancerIP:
        # -- Imaginary: NodePort for service type NodePort
        nodePort:
        # -- Additional annotations for service imaginary
        annotations: {}
        # -- Additional labels for service imaginary
        labels: {}

    ## Prometheus Exporter / Metrics
    ##
    metrics:
      enabled: false
      tlsSkipVerify: true
      info:
        # Optional: becomes NEXTCLOUD_INFO_APPS env var in the nextcloud-exporter container.
        # Enables gathering of apps-related metrics. Defaults to false
        apps: true
      serviceMonitor:
        enabled: false
        namespace: "observability"
