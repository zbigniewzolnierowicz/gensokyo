---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 6.5.0
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: public.ecr.aws/docker/library/nextcloud
      flavor: fpm-alpine
    phpClientHttpsFix:
      enabled: true
    nextcloud:
      host: &host cloud.${SECRET_DOMAIN}
      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local
        - name: REDIS_DATABASE
          value: "1"
      existingSecret:
        enabled: true
        secretName: &secret nextcloud-secret
        usernameKey: ADMIN_USERNAME
        passwordKey: ADMIN_PASSWORD
        smtpHostKey: SMTP_HOST
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_DOMAIN}
        smtp:
          port: 25
          secure: ''
      configs:
        local.config.php: |-
          <?php
          $CONFIG = array(
            'trusted_proxies' => array(
              '127.0.0.1',
              '10.69.0.0/16',
              '10.96.0.0/16',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
            'default_phone_region' => 'PL',
            'auth.bruteforce.protection.enabled' => true,
            'maintenance_window_start' => 1,
          );
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
        www.conf: |
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000
          pm = dynamic
          pm.max_children = 57
          pm.start_servers = 14
          pm.min_spare_servers = 14
          pm.max_spare_servers = 42
          pm.max_requests = 500
          pm.process_idle_timeout = 10s
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    ingress:
      enabled: true
      className: external
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Storage
        gethomepage.dev/icon: nextcloud.png
        gethomepage.dev/name: Nextcloud
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/custom-http-errors: "502,503"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - *host
    nginx:
      enabled: true
      image:
        repository: public.ecr.aws/nginx/nginx
      config:
        default: true
      securityContext:
        runAsGroup: 82
      resources:
        requests:
          cpu: 50m
          memory: 20Mi
        limits:
          memory: 100Mi
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *secret
        hostKey: DATABASE_HOST
        databaseKey: DATABASE_DB
        usernameKey: DATABASE_USER
        passwordKey: DATABASE_PASSWORD
    redis:
      enabled: false
    metrics:
      enabled: false
      https: true
      serviceMonitor:
        enabled: false
    cronjob:
      enabled: true
      securityContext:
        runAsGroup: 82
    securityContext:
      fsGroupChangePolicy: OnRootMismatch
    startupProbe:
      enabled: false
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
