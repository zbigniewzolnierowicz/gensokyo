---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tandoor
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: tandoor-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        SECRET_KEY: "{{ .TANDOOR_SECRET_KEY }}"
        SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
        SOCIALACCOUNT_PROVIDERS: '{"openid_connect":{"SERVERS":[{"id":"authentik","name":"${SECRET_DOMAIN}","server_url":"https://sso.${SECRET_DOMAIN}/application/o/tandoor/.well-known/openid-configuration","token_auth_method":"client_secret_basic","APP":{"client_id":"{{ .TANDOOR_CLIENT_ID }}","secret":"{{ .TANDOOR_CLIENT_SECRET }}"}}]}}'
        EMAIL_HOST: "{{ .SMTP_HOST }}"
        EMAIL_PORT: "{{ .SMTP_PORT }}"
        EMAIL_HOST_USER: "{{ .SMTP_USERNAME }}"
        EMAIL_HOST_PASSWORD: "{{ .SMTP_PASSWORD }}"
        EMAIL_USE_SSL: "1"
        DEFAULT_FROM_EMAIL: cluster+recipes@${SECRET_DOMAIN}
        ACCOUNT_EMAIL_SUBJECT_PREFIX: "[Recipes]"
  dataFrom:
    - extract:
        key: kv/cluster/default/tandoor
      rewrite:
        - regexp:
            source: "(.*)"
            target: "TANDOOR_$1"
    - extract:
        key: kv/cluster/smtp
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tandoor-db
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: tandoor-secret
    creationPolicy: Merge
    deletionPolicy: Retain
    template:
      type: Opaque
      data:
        DB_ENGINE: django.db.backends.postgresql
        POSTGRES_HOST: '{{ index . "pgbouncer-host" }}'
        POSTGRES_PORT: '{{ index . "pgbouncer-port" }}'
        POSTGRES_USER: '{{ index . "user" }}'
        POSTGRES_PASSWORD: '{{ index . "password" }}'
        POSTGRES_DB: '{{ index . "dbname" }}'
  dataFrom:
    - extract:
        key: postgres-pguser-tandoor
